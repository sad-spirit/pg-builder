<?php

/*
 * This file is part of sad_spirit/pg_builder:
 * query builder for Postgres backed by SQL parser
 *
 * (c) Alexey Borzov <avb@php.net>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

declare(strict_types=1);

namespace sad_spirit\pg_builder;

/**
 * Contains all PostgreSQL keywords
 *
 * The cases are generated from `src/include/parser/kwlist.h` file, additional keyword properties specified there
 * are returned by {@see Keyword::getType()} and {@see Keyword::isBareLabel()} methods.
 *
 * A case for "class" keyword is named CLASS_ as "::class" is reserved in PHP.
 */
enum Keyword: string
{
    case ABORT             = 'abort';
    case ABSENT            = 'absent';
    case ABSOLUTE          = 'absolute';
    case ACCESS            = 'access';
    case ACTION            = 'action';
    case ADD               = 'add';
    case ADMIN             = 'admin';
    case AFTER             = 'after';
    case AGGREGATE         = 'aggregate';
    case ALL               = 'all';
    case ALSO              = 'also';
    case ALTER             = 'alter';
    case ALWAYS            = 'always';
    case ANALYSE           = 'analyse';
    case ANALYZE           = 'analyze';
    case AND               = 'and';
    case ANY               = 'any';
    case ARRAY             = 'array';
    case AS                = 'as';
    case ASC               = 'asc';
    case ASENSITIVE        = 'asensitive';
    case ASSERTION         = 'assertion';
    case ASSIGNMENT        = 'assignment';
    case ASYMMETRIC        = 'asymmetric';
    case AT                = 'at';
    case ATOMIC            = 'atomic';
    case ATTACH            = 'attach';
    case ATTRIBUTE         = 'attribute';
    case AUTHORIZATION     = 'authorization';
    case BACKWARD          = 'backward';
    case BEFORE            = 'before';
    case BEGIN             = 'begin';
    case BETWEEN           = 'between';
    case BIGINT            = 'bigint';
    case BINARY            = 'binary';
    case BIT               = 'bit';
    case BOOLEAN           = 'boolean';
    case BOTH              = 'both';
    case BREADTH           = 'breadth';
    case BY                = 'by';
    case CACHE             = 'cache';
    case CALL              = 'call';
    case CALLED            = 'called';
    case CASCADE           = 'cascade';
    case CASCADED          = 'cascaded';
    case CASE              = 'case';
    case CAST              = 'cast';
    case CATALOG           = 'catalog';
    case CHAIN             = 'chain';
    case CHAR              = 'char';
    case CHARACTER         = 'character';
    case CHARACTERISTICS   = 'characteristics';
    case CHECK             = 'check';
    case CHECKPOINT        = 'checkpoint';
    case CLASS_            = 'class';
    case CLOSE             = 'close';
    case CLUSTER           = 'cluster';
    case COALESCE          = 'coalesce';
    case COLLATE           = 'collate';
    case COLLATION         = 'collation';
    case COLUMN            = 'column';
    case COLUMNS           = 'columns';
    case COMMENT           = 'comment';
    case COMMENTS          = 'comments';
    case COMMIT            = 'commit';
    case COMMITTED         = 'committed';
    case COMPRESSION       = 'compression';
    case CONCURRENTLY      = 'concurrently';
    case CONDITIONAL       = 'conditional';
    case CONFIGURATION     = 'configuration';
    case CONFLICT          = 'conflict';
    case CONNECTION        = 'connection';
    case CONSTRAINT        = 'constraint';
    case CONSTRAINTS       = 'constraints';
    case CONTENT           = 'content';
    case CONTINUE          = 'continue';
    case CONVERSION        = 'conversion';
    case COPY              = 'copy';
    case COST              = 'cost';
    case CREATE            = 'create';
    case CROSS             = 'cross';
    case CSV               = 'csv';
    case CUBE              = 'cube';
    case CURRENT           = 'current';
    case CURRENT_CATALOG   = 'current_catalog';
    case CURRENT_DATE      = 'current_date';
    case CURRENT_ROLE      = 'current_role';
    case CURRENT_SCHEMA    = 'current_schema';
    case CURRENT_TIME      = 'current_time';
    case CURRENT_TIMESTAMP = 'current_timestamp';
    case CURRENT_USER      = 'current_user';
    case CURSOR            = 'cursor';
    case CYCLE             = 'cycle';
    case DATA              = 'data';
    case DATABASE          = 'database';
    case DAY               = 'day';
    case DEALLOCATE        = 'deallocate';
    case DEC               = 'dec';
    case DECIMAL           = 'decimal';
    case DECLARE           = 'declare';
    case DEFAULT           = 'default';
    case DEFAULTS          = 'defaults';
    case DEFERRABLE        = 'deferrable';
    case DEFERRED          = 'deferred';
    case DEFINER           = 'definer';
    case DELETE            = 'delete';
    case DELIMITER         = 'delimiter';
    case DELIMITERS        = 'delimiters';
    case DEPENDS           = 'depends';
    case DEPTH             = 'depth';
    case DESC              = 'desc';
    case DETACH            = 'detach';
    case DICTIONARY        = 'dictionary';
    case DISABLE           = 'disable';
    case DISCARD           = 'discard';
    case DISTINCT          = 'distinct';
    case DO                = 'do';
    case DOCUMENT          = 'document';
    case DOMAIN            = 'domain';
    case DOUBLE            = 'double';
    case DROP              = 'drop';
    case EACH              = 'each';
    case ELSE              = 'else';
    case EMPTY             = 'empty';
    case ENABLE            = 'enable';
    case ENCODING          = 'encoding';
    case ENCRYPTED         = 'encrypted';
    case END               = 'end';
    case ENUM              = 'enum';
    case ERROR             = 'error';
    case ESCAPE            = 'escape';
    case EVENT             = 'event';
    case EXCEPT            = 'except';
    case EXCLUDE           = 'exclude';
    case EXCLUDING         = 'excluding';
    case EXCLUSIVE         = 'exclusive';
    case EXECUTE           = 'execute';
    case EXISTS            = 'exists';
    case EXPLAIN           = 'explain';
    case EXPRESSION        = 'expression';
    case EXTENSION         = 'extension';
    case EXTERNAL          = 'external';
    case EXTRACT           = 'extract';
    case FALSE             = 'false';
    case FAMILY            = 'family';
    case FETCH             = 'fetch';
    case FILTER            = 'filter';
    case FINALIZE          = 'finalize';
    case FIRST             = 'first';
    case FLOAT             = 'float';
    case FOLLOWING         = 'following';
    case FOR               = 'for';
    case FORCE             = 'force';
    case FOREIGN           = 'foreign';
    case FORMAT            = 'format';
    case FORWARD           = 'forward';
    case FREEZE            = 'freeze';
    case FROM              = 'from';
    case FULL              = 'full';
    case FUNCTION          = 'function';
    case FUNCTIONS         = 'functions';
    case GENERATED         = 'generated';
    case GLOBAL            = 'global';
    case GRANT             = 'grant';
    case GRANTED           = 'granted';
    case GREATEST          = 'greatest';
    case GROUP             = 'group';
    case GROUPING          = 'grouping';
    case GROUPS            = 'groups';
    case HANDLER           = 'handler';
    case HAVING            = 'having';
    case HEADER            = 'header';
    case HOLD              = 'hold';
    case HOUR              = 'hour';
    case IDENTITY          = 'identity';
    case IF                = 'if';
    case ILIKE             = 'ilike';
    case IMMEDIATE         = 'immediate';
    case IMMUTABLE         = 'immutable';
    case IMPLICIT          = 'implicit';
    case IMPORT            = 'import';
    case IN                = 'in';
    case INCLUDE           = 'include';
    case INCLUDING         = 'including';
    case INCREMENT         = 'increment';
    case INDENT            = 'indent';
    case INDEX             = 'index';
    case INDEXES           = 'indexes';
    case INHERIT           = 'inherit';
    case INHERITS          = 'inherits';
    case INITIALLY         = 'initially';
    case INLINE            = 'inline';
    case INNER             = 'inner';
    case INOUT             = 'inout';
    case INPUT             = 'input';
    case INSENSITIVE       = 'insensitive';
    case INSERT            = 'insert';
    case INSTEAD           = 'instead';
    case INT               = 'int';
    case INTEGER           = 'integer';
    case INTERSECT         = 'intersect';
    case INTERVAL          = 'interval';
    case INTO              = 'into';
    case INVOKER           = 'invoker';
    case IS                = 'is';
    case ISNULL            = 'isnull';
    case ISOLATION         = 'isolation';
    case JOIN              = 'join';
    case JSON              = 'json';
    case JSON_ARRAY        = 'json_array';
    case JSON_ARRAYAGG     = 'json_arrayagg';
    case JSON_EXISTS       = 'json_exists';
    case JSON_OBJECT       = 'json_object';
    case JSON_OBJECTAGG    = 'json_objectagg';
    case JSON_QUERY        = 'json_query';
    case JSON_SCALAR       = 'json_scalar';
    case JSON_SERIALIZE    = 'json_serialize';
    case JSON_TABLE        = 'json_table';
    case JSON_VALUE        = 'json_value';
    case KEEP              = 'keep';
    case KEY               = 'key';
    case KEYS              = 'keys';
    case LABEL             = 'label';
    case LANGUAGE          = 'language';
    case LARGE             = 'large';
    case LAST              = 'last';
    case LATERAL           = 'lateral';
    case LEADING           = 'leading';
    case LEAKPROOF         = 'leakproof';
    case LEAST             = 'least';
    case LEFT              = 'left';
    case LEVEL             = 'level';
    case LIKE              = 'like';
    case LIMIT             = 'limit';
    case LISTEN            = 'listen';
    case LOAD              = 'load';
    case LOCAL             = 'local';
    case LOCALTIME         = 'localtime';
    case LOCALTIMESTAMP    = 'localtimestamp';
    case LOCATION          = 'location';
    case LOCK              = 'lock';
    case LOCKED            = 'locked';
    case LOGGED            = 'logged';
    case MAPPING           = 'mapping';
    case MATCH             = 'match';
    case MATCHED           = 'matched';
    case MATERIALIZED      = 'materialized';
    case MAXVALUE          = 'maxvalue';
    case MERGE             = 'merge';
    case MERGE_ACTION      = 'merge_action';
    case METHOD            = 'method';
    case MINUTE            = 'minute';
    case MINVALUE          = 'minvalue';
    case MODE              = 'mode';
    case MONTH             = 'month';
    case MOVE              = 'move';
    case NAME              = 'name';
    case NAMES             = 'names';
    case NATIONAL          = 'national';
    case NATURAL           = 'natural';
    case NCHAR             = 'nchar';
    case NESTED            = 'nested';
    case NEW               = 'new';
    case NEXT              = 'next';
    case NFC               = 'nfc';
    case NFD               = 'nfd';
    case NFKC              = 'nfkc';
    case NFKD              = 'nfkd';
    case NO                = 'no';
    case NONE              = 'none';
    case NORMALIZE         = 'normalize';
    case NORMALIZED        = 'normalized';
    case NOT               = 'not';
    case NOTHING           = 'nothing';
    case NOTIFY            = 'notify';
    case NOTNULL           = 'notnull';
    case NOWAIT            = 'nowait';
    case NULL              = 'null';
    case NULLIF            = 'nullif';
    case NULLS             = 'nulls';
    case NUMERIC           = 'numeric';
    case OBJECT            = 'object';
    case OF                = 'of';
    case OFF               = 'off';
    case OFFSET            = 'offset';
    case OIDS              = 'oids';
    case OLD               = 'old';
    case OMIT              = 'omit';
    case ON                = 'on';
    case ONLY              = 'only';
    case OPERATOR          = 'operator';
    case OPTION            = 'option';
    case OPTIONS           = 'options';
    case OR                = 'or';
    case ORDER             = 'order';
    case ORDINALITY        = 'ordinality';
    case OTHERS            = 'others';
    case OUT               = 'out';
    case OUTER             = 'outer';
    case OVER              = 'over';
    case OVERLAPS          = 'overlaps';
    case OVERLAY           = 'overlay';
    case OVERRIDING        = 'overriding';
    case OWNED             = 'owned';
    case OWNER             = 'owner';
    case PARALLEL          = 'parallel';
    case PARAMETER         = 'parameter';
    case PARSER            = 'parser';
    case PARTIAL           = 'partial';
    case PARTITION         = 'partition';
    case PASSING           = 'passing';
    case PASSWORD          = 'password';
    case PATH              = 'path';
    case PLACING           = 'placing';
    case PLAN              = 'plan';
    case PLANS             = 'plans';
    case POLICY            = 'policy';
    case POSITION          = 'position';
    case PRECEDING         = 'preceding';
    case PRECISION         = 'precision';
    case PREPARE           = 'prepare';
    case PREPARED          = 'prepared';
    case PRESERVE          = 'preserve';
    case PRIMARY           = 'primary';
    case PRIOR             = 'prior';
    case PRIVILEGES        = 'privileges';
    case PROCEDURAL        = 'procedural';
    case PROCEDURE         = 'procedure';
    case PROCEDURES        = 'procedures';
    case PROGRAM           = 'program';
    case PUBLICATION       = 'publication';
    case QUOTE             = 'quote';
    case QUOTES            = 'quotes';
    case RANGE             = 'range';
    case READ              = 'read';
    case REAL              = 'real';
    case REASSIGN          = 'reassign';
    case RECHECK           = 'recheck';
    case RECURSIVE         = 'recursive';
    case REF               = 'ref';
    case REFERENCES        = 'references';
    case REFERENCING       = 'referencing';
    case REFRESH           = 'refresh';
    case REINDEX           = 'reindex';
    case RELATIVE          = 'relative';
    case RELEASE           = 'release';
    case RENAME            = 'rename';
    case REPEATABLE        = 'repeatable';
    case REPLACE           = 'replace';
    case REPLICA           = 'replica';
    case RESET             = 'reset';
    case RESTART           = 'restart';
    case RESTRICT          = 'restrict';
    case RETURN            = 'return';
    case RETURNING         = 'returning';
    case RETURNS           = 'returns';
    case REVOKE            = 'revoke';
    case RIGHT             = 'right';
    case ROLE              = 'role';
    case ROLLBACK          = 'rollback';
    case ROLLUP            = 'rollup';
    case ROUTINE           = 'routine';
    case ROUTINES          = 'routines';
    case ROW               = 'row';
    case ROWS              = 'rows';
    case RULE              = 'rule';
    case SAVEPOINT         = 'savepoint';
    case SCALAR            = 'scalar';
    case SCHEMA            = 'schema';
    case SCHEMAS           = 'schemas';
    case SCROLL            = 'scroll';
    case SEARCH            = 'search';
    case SECOND            = 'second';
    case SECURITY          = 'security';
    case SELECT            = 'select';
    case SEQUENCE          = 'sequence';
    case SEQUENCES         = 'sequences';
    case SERIALIZABLE      = 'serializable';
    case SERVER            = 'server';
    case SESSION           = 'session';
    case SESSION_USER      = 'session_user';
    case SET               = 'set';
    case SETOF             = 'setof';
    case SETS              = 'sets';
    case SHARE             = 'share';
    case SHOW              = 'show';
    case SIMILAR           = 'similar';
    case SIMPLE            = 'simple';
    case SKIP              = 'skip';
    case SMALLINT          = 'smallint';
    case SNAPSHOT          = 'snapshot';
    case SOME              = 'some';
    case SOURCE            = 'source';
    case SQL               = 'sql';
    case STABLE            = 'stable';
    case STANDALONE        = 'standalone';
    case START             = 'start';
    case STATEMENT         = 'statement';
    case STATISTICS        = 'statistics';
    case STDIN             = 'stdin';
    case STDOUT            = 'stdout';
    case STORAGE           = 'storage';
    case STORED            = 'stored';
    case STRICT            = 'strict';
    case STRING            = 'string';
    case STRIP             = 'strip';
    case SUBSCRIPTION      = 'subscription';
    case SUBSTRING         = 'substring';
    case SUPPORT           = 'support';
    case SYMMETRIC         = 'symmetric';
    case SYSID             = 'sysid';
    case SYSTEM            = 'system';
    case SYSTEM_USER       = 'system_user';
    case TABLE             = 'table';
    case TABLES            = 'tables';
    case TABLESAMPLE       = 'tablesample';
    case TABLESPACE        = 'tablespace';
    case TARGET            = 'target';
    case TEMP              = 'temp';
    case TEMPLATE          = 'template';
    case TEMPORARY         = 'temporary';
    case TEXT              = 'text';
    case THEN              = 'then';
    case TIES              = 'ties';
    case TIME              = 'time';
    case TIMESTAMP         = 'timestamp';
    case TO                = 'to';
    case TRAILING          = 'trailing';
    case TRANSACTION       = 'transaction';
    case TRANSFORM         = 'transform';
    case TREAT             = 'treat';
    case TRIGGER           = 'trigger';
    case TRIM              = 'trim';
    case TRUE              = 'true';
    case TRUNCATE          = 'truncate';
    case TRUSTED           = 'trusted';
    case TYPE              = 'type';
    case TYPES             = 'types';
    case UESCAPE           = 'uescape';
    case UNBOUNDED         = 'unbounded';
    case UNCOMMITTED       = 'uncommitted';
    case UNCONDITIONAL     = 'unconditional';
    case UNENCRYPTED       = 'unencrypted';
    case UNION             = 'union';
    case UNIQUE            = 'unique';
    case UNKNOWN           = 'unknown';
    case UNLISTEN          = 'unlisten';
    case UNLOGGED          = 'unlogged';
    case UNTIL             = 'until';
    case UPDATE            = 'update';
    case USER              = 'user';
    case USING             = 'using';
    case VACUUM            = 'vacuum';
    case VALID             = 'valid';
    case VALIDATE          = 'validate';
    case VALIDATOR         = 'validator';
    case VALUE             = 'value';
    case VALUES            = 'values';
    case VARCHAR           = 'varchar';
    case VARIADIC          = 'variadic';
    case VARYING           = 'varying';
    case VERBOSE           = 'verbose';
    case VERSION           = 'version';
    case VIEW              = 'view';
    case VIEWS             = 'views';
    case VOLATILE          = 'volatile';
    case WHEN              = 'when';
    case WHERE             = 'where';
    case WHITESPACE        = 'whitespace';
    case WINDOW            = 'window';
    case WITH              = 'with';
    case WITHIN            = 'within';
    case WITHOUT           = 'without';
    case WORK              = 'work';
    case WRAPPER           = 'wrapper';
    case WRITE             = 'write';
    case XML               = 'xml';
    case XMLATTRIBUTES     = 'xmlattributes';
    case XMLCONCAT         = 'xmlconcat';
    case XMLELEMENT        = 'xmlelement';
    case XMLEXISTS         = 'xmlexists';
    case XMLFOREST         = 'xmlforest';
    case XMLNAMESPACES     = 'xmlnamespaces';
    case XMLPARSE          = 'xmlparse';
    case XMLPI             = 'xmlpi';
    case XMLROOT           = 'xmlroot';
    case XMLSERIALIZE      = 'xmlserialize';
    case XMLTABLE          = 'xmltable';
    case YEAR              = 'year';
    case YES               = 'yes';
    case ZONE              = 'zone';

    private const CATEGORIES = [
        'ALL'               => TokenType::RESERVED_KEYWORD,
        'ANALYSE'           => TokenType::RESERVED_KEYWORD,
        'ANALYZE'           => TokenType::RESERVED_KEYWORD,
        'AND'               => TokenType::RESERVED_KEYWORD,
        'ANY'               => TokenType::RESERVED_KEYWORD,
        'ARRAY'             => TokenType::RESERVED_KEYWORD,
        'AS'                => TokenType::RESERVED_KEYWORD,
        'ASC'               => TokenType::RESERVED_KEYWORD,
        'ASYMMETRIC'        => TokenType::RESERVED_KEYWORD,
        'BOTH'              => TokenType::RESERVED_KEYWORD,
        'CASE'              => TokenType::RESERVED_KEYWORD,
        'CAST'              => TokenType::RESERVED_KEYWORD,
        'CHECK'             => TokenType::RESERVED_KEYWORD,
        'COLLATE'           => TokenType::RESERVED_KEYWORD,
        'COLUMN'            => TokenType::RESERVED_KEYWORD,
        'CONSTRAINT'        => TokenType::RESERVED_KEYWORD,
        'CREATE'            => TokenType::RESERVED_KEYWORD,
        'CURRENT_CATALOG'   => TokenType::RESERVED_KEYWORD,
        'CURRENT_DATE'      => TokenType::RESERVED_KEYWORD,
        'CURRENT_ROLE'      => TokenType::RESERVED_KEYWORD,
        'CURRENT_TIME'      => TokenType::RESERVED_KEYWORD,
        'CURRENT_TIMESTAMP' => TokenType::RESERVED_KEYWORD,
        'CURRENT_USER'      => TokenType::RESERVED_KEYWORD,
        'DEFAULT'           => TokenType::RESERVED_KEYWORD,
        'DEFERRABLE'        => TokenType::RESERVED_KEYWORD,
        'DESC'              => TokenType::RESERVED_KEYWORD,
        'DISTINCT'          => TokenType::RESERVED_KEYWORD,
        'DO'                => TokenType::RESERVED_KEYWORD,
        'ELSE'              => TokenType::RESERVED_KEYWORD,
        'END'               => TokenType::RESERVED_KEYWORD,
        'EXCEPT'            => TokenType::RESERVED_KEYWORD,
        'FALSE'             => TokenType::RESERVED_KEYWORD,
        'FETCH'             => TokenType::RESERVED_KEYWORD,
        'FOR'               => TokenType::RESERVED_KEYWORD,
        'FOREIGN'           => TokenType::RESERVED_KEYWORD,
        'FROM'              => TokenType::RESERVED_KEYWORD,
        'GRANT'             => TokenType::RESERVED_KEYWORD,
        'GROUP'             => TokenType::RESERVED_KEYWORD,
        'HAVING'            => TokenType::RESERVED_KEYWORD,
        'IN'                => TokenType::RESERVED_KEYWORD,
        'INITIALLY'         => TokenType::RESERVED_KEYWORD,
        'INTERSECT'         => TokenType::RESERVED_KEYWORD,
        'INTO'              => TokenType::RESERVED_KEYWORD,
        'LATERAL'           => TokenType::RESERVED_KEYWORD,
        'LEADING'           => TokenType::RESERVED_KEYWORD,
        'LIMIT'             => TokenType::RESERVED_KEYWORD,
        'LOCALTIME'         => TokenType::RESERVED_KEYWORD,
        'LOCALTIMESTAMP'    => TokenType::RESERVED_KEYWORD,
        'NOT'               => TokenType::RESERVED_KEYWORD,
        'NULL'              => TokenType::RESERVED_KEYWORD,
        'OFFSET'            => TokenType::RESERVED_KEYWORD,
        'ON'                => TokenType::RESERVED_KEYWORD,
        'ONLY'              => TokenType::RESERVED_KEYWORD,
        'OR'                => TokenType::RESERVED_KEYWORD,
        'ORDER'             => TokenType::RESERVED_KEYWORD,
        'PLACING'           => TokenType::RESERVED_KEYWORD,
        'PRIMARY'           => TokenType::RESERVED_KEYWORD,
        'REFERENCES'        => TokenType::RESERVED_KEYWORD,
        'RETURNING'         => TokenType::RESERVED_KEYWORD,
        'SELECT'            => TokenType::RESERVED_KEYWORD,
        'SESSION_USER'      => TokenType::RESERVED_KEYWORD,
        'SOME'              => TokenType::RESERVED_KEYWORD,
        'SYMMETRIC'         => TokenType::RESERVED_KEYWORD,
        'SYSTEM_USER'       => TokenType::RESERVED_KEYWORD,
        'TABLE'             => TokenType::RESERVED_KEYWORD,
        'THEN'              => TokenType::RESERVED_KEYWORD,
        'TO'                => TokenType::RESERVED_KEYWORD,
        'TRAILING'          => TokenType::RESERVED_KEYWORD,
        'TRUE'              => TokenType::RESERVED_KEYWORD,
        'UNION'             => TokenType::RESERVED_KEYWORD,
        'UNIQUE'            => TokenType::RESERVED_KEYWORD,
        'USER'              => TokenType::RESERVED_KEYWORD,
        'USING'             => TokenType::RESERVED_KEYWORD,
        'VARIADIC'          => TokenType::RESERVED_KEYWORD,
        'WHEN'              => TokenType::RESERVED_KEYWORD,
        'WHERE'             => TokenType::RESERVED_KEYWORD,
        'WINDOW'            => TokenType::RESERVED_KEYWORD,
        'WITH'              => TokenType::RESERVED_KEYWORD,
        'AUTHORIZATION'     => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'BINARY'            => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'COLLATION'         => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'CONCURRENTLY'      => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'CROSS'             => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'CURRENT_SCHEMA'    => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'FREEZE'            => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'FULL'              => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'ILIKE'             => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'INNER'             => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'IS'                => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'ISNULL'            => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'JOIN'              => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'LEFT'              => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'LIKE'              => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'NATURAL'           => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'NOTNULL'           => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'OUTER'             => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'OVERLAPS'          => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'RIGHT'             => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'SIMILAR'           => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'TABLESAMPLE'       => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'VERBOSE'           => TokenType::TYPE_FUNC_NAME_KEYWORD,
        'BETWEEN'           => TokenType::COL_NAME_KEYWORD,
        'BIGINT'            => TokenType::COL_NAME_KEYWORD,
        'BIT'               => TokenType::COL_NAME_KEYWORD,
        'BOOLEAN'           => TokenType::COL_NAME_KEYWORD,
        'CHAR'              => TokenType::COL_NAME_KEYWORD,
        'CHARACTER'         => TokenType::COL_NAME_KEYWORD,
        'COALESCE'          => TokenType::COL_NAME_KEYWORD,
        'DEC'               => TokenType::COL_NAME_KEYWORD,
        'DECIMAL'           => TokenType::COL_NAME_KEYWORD,
        'EXISTS'            => TokenType::COL_NAME_KEYWORD,
        'EXTRACT'           => TokenType::COL_NAME_KEYWORD,
        'FLOAT'             => TokenType::COL_NAME_KEYWORD,
        'GREATEST'          => TokenType::COL_NAME_KEYWORD,
        'GROUPING'          => TokenType::COL_NAME_KEYWORD,
        'INOUT'             => TokenType::COL_NAME_KEYWORD,
        'INT'               => TokenType::COL_NAME_KEYWORD,
        'INTEGER'           => TokenType::COL_NAME_KEYWORD,
        'INTERVAL'          => TokenType::COL_NAME_KEYWORD,
        'JSON'              => TokenType::COL_NAME_KEYWORD,
        'JSON_ARRAY'        => TokenType::COL_NAME_KEYWORD,
        'JSON_ARRAYAGG'     => TokenType::COL_NAME_KEYWORD,
        'JSON_EXISTS'       => TokenType::COL_NAME_KEYWORD,
        'JSON_OBJECT'       => TokenType::COL_NAME_KEYWORD,
        'JSON_OBJECTAGG'    => TokenType::COL_NAME_KEYWORD,
        'JSON_QUERY'        => TokenType::COL_NAME_KEYWORD,
        'JSON_SCALAR'       => TokenType::COL_NAME_KEYWORD,
        'JSON_SERIALIZE'    => TokenType::COL_NAME_KEYWORD,
        'JSON_TABLE'        => TokenType::COL_NAME_KEYWORD,
        'JSON_VALUE'        => TokenType::COL_NAME_KEYWORD,
        'LEAST'             => TokenType::COL_NAME_KEYWORD,
        'MERGE_ACTION'      => TokenType::COL_NAME_KEYWORD,
        'NATIONAL'          => TokenType::COL_NAME_KEYWORD,
        'NCHAR'             => TokenType::COL_NAME_KEYWORD,
        'NONE'              => TokenType::COL_NAME_KEYWORD,
        'NORMALIZE'         => TokenType::COL_NAME_KEYWORD,
        'NULLIF'            => TokenType::COL_NAME_KEYWORD,
        'NUMERIC'           => TokenType::COL_NAME_KEYWORD,
        'OUT'               => TokenType::COL_NAME_KEYWORD,
        'OVERLAY'           => TokenType::COL_NAME_KEYWORD,
        'POSITION'          => TokenType::COL_NAME_KEYWORD,
        'PRECISION'         => TokenType::COL_NAME_KEYWORD,
        'REAL'              => TokenType::COL_NAME_KEYWORD,
        'ROW'               => TokenType::COL_NAME_KEYWORD,
        'SETOF'             => TokenType::COL_NAME_KEYWORD,
        'SMALLINT'          => TokenType::COL_NAME_KEYWORD,
        'SUBSTRING'         => TokenType::COL_NAME_KEYWORD,
        'TIME'              => TokenType::COL_NAME_KEYWORD,
        'TIMESTAMP'         => TokenType::COL_NAME_KEYWORD,
        'TREAT'             => TokenType::COL_NAME_KEYWORD,
        'TRIM'              => TokenType::COL_NAME_KEYWORD,
        'VALUES'            => TokenType::COL_NAME_KEYWORD,
        'VARCHAR'           => TokenType::COL_NAME_KEYWORD,
        'XMLATTRIBUTES'     => TokenType::COL_NAME_KEYWORD,
        'XMLCONCAT'         => TokenType::COL_NAME_KEYWORD,
        'XMLELEMENT'        => TokenType::COL_NAME_KEYWORD,
        'XMLEXISTS'         => TokenType::COL_NAME_KEYWORD,
        'XMLFOREST'         => TokenType::COL_NAME_KEYWORD,
        'XMLNAMESPACES'     => TokenType::COL_NAME_KEYWORD,
        'XMLPARSE'          => TokenType::COL_NAME_KEYWORD,
        'XMLPI'             => TokenType::COL_NAME_KEYWORD,
        'XMLROOT'           => TokenType::COL_NAME_KEYWORD,
        'XMLSERIALIZE'      => TokenType::COL_NAME_KEYWORD,
        'XMLTABLE'          => TokenType::COL_NAME_KEYWORD
    ];

    private const REQUIRE_AS = [
        'ARRAY'             => true,
        'AS'                => true,
        'CHAR'              => true,
        'CHARACTER'         => true,
        'CREATE'            => true,
        'DAY'               => true,
        'EXCEPT'            => true,
        'FETCH'             => true,
        'FILTER'            => true,
        'FOR'               => true,
        'FROM'              => true,
        'GRANT'             => true,
        'GROUP'             => true,
        'HAVING'            => true,
        'HOUR'              => true,
        'INTERSECT'         => true,
        'INTO'              => true,
        'ISNULL'            => true,
        'LIMIT'             => true,
        'MINUTE'            => true,
        'MONTH'             => true,
        'NOTNULL'           => true,
        'OFFSET'            => true,
        'ON'                => true,
        'ORDER'             => true,
        'OVER'              => true,
        'OVERLAPS'          => true,
        'PRECISION'         => true,
        'RETURNING'         => true,
        'SECOND'            => true,
        'TO'                => true,
        'UNION'             => true,
        'VARYING'           => true,
        'WHERE'             => true,
        'WINDOW'            => true,
        'WITH'              => true,
        'WITHIN'            => true,
        'WITHOUT'           => true,
        'YEAR'              => true
    ];

    /**
     * Returns {@see TokenType} case representing the keyword's category
     *
     * Only TokenType cases matching {@see TokenType::KEYWORD} will be returned
     */
    public function getType(): TokenType
    {
        return self::CATEGORIES[$this->name] ?? TokenType::UNRESERVED_KEYWORD;
    }

    /**
     * Checks whether the keyword can be used as a column label without AS
     */
    public function isBareLabel(): bool
    {
        return empty(self::REQUIRE_AS[$this->name]);
    }
}
